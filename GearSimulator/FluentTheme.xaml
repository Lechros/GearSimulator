<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GearSimulator"
                    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/FluentWPF;component/Styles/Controls.xaml"/>

        <ResourceDictionary>
            <!-- Text Styles -->
            <Style x:Key="PageTitleBox" TargetType="Canvas">
                <Setter Property="Height" Value="48"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Background" Value="{DynamicResource SystemAltHighColorBrush}"/>
            </Style>
            <Style x:Key="PageTitleText" TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="28"/>
                <Setter Property="Foreground" Value="{DynamicResource SystemBaseHighColorBrush}"/>
            </Style>
            <Style x:Key="PageHeaderText" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,12,0,12"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="{DynamicResource SystemBaseHighColorBrush}"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>
            <Style x:Key="PageParagraphText" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,0,0,8"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="{DynamicResource SystemBaseHighColorBrush}"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
            </Style>

            <!-- TextBox Style -->
            <Style x:Key="FluentTextBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxRevealStyle}">
                <Style.Setters>
                    <Setter Property="Height" Value="32"/>
                    <Setter Property="Margin" Value="0,0,0,12"/>
                    <Setter Property="Padding" Value="8,4"/>
                    <Setter Property="HorizontalAlignment" Value="Left"/>
                    <Setter Property="FontSize" Value="14"/>
                </Style.Setters>
            </Style>

            <!-- RadioButton Style -->
            <ControlTemplate x:Key="FluentRadioButton" TargetType="RadioButton">
                <BulletDecorator x:Name="BulletDecorator" SnapsToDevicePixels="True">
                    <BulletDecorator.Bullet>
                        <Grid>
                            <Path x:Name="Border">
                                <Path.Data>
                                    <CombinedGeometry GeometryCombineMode="Xor">
                                        <CombinedGeometry.Geometry1>
                                            <EllipseGeometry RadiusX="10" RadiusY="10" Center="10,10"/>
                                        </CombinedGeometry.Geometry1>
                                        <CombinedGeometry.Geometry2>
                                            <EllipseGeometry RadiusX="8" RadiusY="8" Center="10,10"/>
                                        </CombinedGeometry.Geometry2>
                                    </CombinedGeometry>
                                </Path.Data>
                            </Path>
                            <Ellipse x:Name="CheckMark" Width="10" Height="10"/>
                            <Ellipse x:Name="Hitbox" Width="20" Height="20" Fill="Transparent"/>
                        </Grid>
                    </BulletDecorator.Bullet>
                    <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"
                                      TextBlock.Foreground="{TemplateBinding Foreground}"/>
                </BulletDecorator>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="False">
                        <Setter TargetName="Border" Property="Fill" Value="{DynamicResource SystemBaseMediumHighColorBrush}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="Border" Property="Fill" Value="{DynamicResource SystemBaseHighColorBrush}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource SystemBaseMediumHighColorBrush}"/>
                        <Setter TargetName="Border" Property="Fill" Value="{x:Static fw:AccentColors.ImmersiveSystemAccentBrush}"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsChecked" Value="True"/>
                            <Condition Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource SystemBaseHighColorBrush}"/>
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <!-- CheckBox Style -->
            <Style x:Key="FluentCheckBox" TargetType="CheckBox">
                <Setter Property="Padding" Value="8,5,0,0"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="32"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Grid x:Name="RootGrid" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid Height="32" VerticalAlignment="Top">
                                    <Border x:Name="NormalBorder"
                                            Width="20"
                                            Height="20"
                                            BorderThickness="2"
                                            BorderBrush="{DynamicResource SystemBaseHighColorBrush}"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            UseLayoutRounding="False"/>
                                    <TextBlock x:Name="CheckGlyph"
                                               FontFamily="Segoe MDL2 Assets"
                                               Foreground="{DynamicResource SystemChromeWhiteColorBrush}"
                                               FontSize="20" Text="&#xE001;" Opacity="0"
                                               HorizontalAlignment="Left"
                                               VerticalAlignment="Center"/>
                                </Grid>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  Height="32"
                                                  Grid.Column="1"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  Margin="{TemplateBinding Padding}"/>

                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="NormalBorder" Property="Background"
                                                Value="{x:Static fw:AccentColors.ImmersiveSystemAccentBrush}"/>
                                        <Setter TargetName="CheckGlyph" Property="Opacity" Value="1"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="False">
                                    <Trigger.Setters>
                                        <Setter TargetName="CheckGlyph" Property="Opacity" Value="0"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="NormalBorder" Property="BorderBrush"
                                                    Value="{DynamicResource SystemBaseHighColorBrush}"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="NormalBorder" Property="BorderBrush"
                                                Value="{x:Static fw:AccentColors.ImmersiveSystemAccentBrush}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="False"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.Setters>
                                        <Setter TargetName="NormalBorder" Property="BorderBrush"
                                                Value="{DynamicResource SystemBaseMediumHighColorBrush}"/>
                                    </MultiTrigger.Setters>
                                </MultiTrigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.Setters>
                                        <Setter TargetName="NormalBorder" Property="Background"
                                                Value="{DynamicResource SystemBaseMediumColorBrush}"/>
                                        <Setter TargetName="NormalBorder" Property="BorderBrush"
                                                Value="{DynamicResource SystemBaseMediumColorBrush}"/>
                                    </Trigger.Setters>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ComboBox Style -->
            <Style BasedOn="{StaticResource ComboBoxRevealStyle}" TargetType="ComboBox" x:Key="FluentComboBox">
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="Margin" Value="0,0,0,12"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="MaxDropDownHeight" Value="450"/>
            </Style>

        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
</ResourceDictionary>